import printf;

var val = 42;
var other = 666;
var ptr = &val;

//list of exported symbols that will work like any other native function
//if you dont define any here the asm block is executed like a statement
asm logVal, doMagic
{
	//gas syntax for instructions	

	logVal:
		mov $format, %rdi	//arg0 = format;
		mov val, %rsi		//arg1 = val;
		mov $0, %al			//make sure %al is zero => no float arguments to printf
		call *printf		//printf(arg0, arg1);
		ret

	doMagic:
		movq $1337, *ptr	//*ptr = 1337; (size suffix is here required)
		mov $other, %rax	//ptr = &other;
		mov %rax, ptr
		ret

	//intel syntax for data
    format:
		db 37, 100, 10, 0	//"%d\n"

};

printf("val = %d, other = %d, ptr = %p\n", val, other, ptr);

logVal();
doMagic();
logVal();

printf("val = %d, other = %d, ptr = %p\n", val, other, ptr);

