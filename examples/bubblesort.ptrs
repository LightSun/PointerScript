import printf, srand, rand, time from "libc.so.6";

const len = 100;
var parts = new array[len];

srand(time(NULL));
for(var i = 0; i < len; i++)
{
	parts[i] = rand() & 0xffff;
}

/*
note: if you want speed use 'qsort' (see `man 3 qsort`)
import qsort;
qsort(parts, len, VARSIZE, (a, b) -> *as<pointer>a - *as<pointer>b);



if you want even more speed (e.g. when sorting arrays of length >10mio)
you can use a native compar function instead of a lambda:
asm compar
{
	compar:
		mov (%rdi), %rax
		sub (%rsi), %rax
		ret
}
qsort(parts, len, VARSIZE, compar);
*/

//simple bubble sort
for(var i = 0; i < len; i++)
{
	for(var j = 0; j < len - 1; j++)
	{
		if(parts[j] > parts[j + 1])
		{
			var tmp = parts[j + 1];
			parts[j + 1] = parts[j];
			parts[j] = tmp;
		}
	}
}

for(var i = 0; i < len; i++)
{
	printf("%5d ", parts[i]);
}
printf("\n");
