import printf, srand, rand, time from "libc.so.6";

const len = 1000;
var parts = new array[len];

srand(time(NULL));
for(var i = 0; i < len; i++)
{
	parts[i] = rand() & 0xffff;
}

/*
note: if you want speed use 'qsort' (see `man 3 qsort`)

qsort(parts, len, sizeof var, (a: pointer, b: pointer) -> *a - *b);



if you want even more speed (e.g. when sorting arrays of length >10mio)
and if you can be sure the array only contains values of one type you
can add type annotations:

function compareInts(a: pointer, b: pointer)
{
	var a2 = as<int>*a;
	var b2 = as<int>*b;
	return a2 - b2;
}
qsort(parts, len, sizeof var, compareInts);
*/

//simple bubble sort
for(var i = 0; i < len; i++)
{
	for(var j = 0; j < len - 1; j++)
	{
		if(parts[j] > parts[j + 1])
		{
			var tmp = parts[j + 1];
			parts[j + 1] = parts[j];
			parts[j] = tmp;
		}
	}
}

for(var i = 0; i < len; i++)
{
	printf("%5d ", parts[i]);
}
printf("\n");
