import printf, strcmp, gettimeofday;

//C compatible structs
struct Time
{
	seconds : i64;
	microseconds : i32;
};
var now = new Time();

gettimeofday(now, NULL);
printf("milliseconds since epoch: %lld\n", now.seconds * 1000 + now.microseconds / 1000);
delete now;



struct Foo
{
	//struct can have field-,
	value = 42;
	//array-
	myByteArray{128};
	//var-array-
	myValues[42];
	//and function-members
	dump()
	{
		printf("%-20p%-20ld%-20p\n", this, this.value, this.myValues);
	}

	//there is also a 'constructor' and 'destructor'
	constructor(a, b = 0)
	{
		if(a)
			this.value = a + b;
	}

	//there are also a few special operators you can overload
	operator this.name
	{
		return name;
	}
	operator this[key]
	{
		return "getting property $key";
	}

	operator this(a, b, c = 3)
	{
		return a + b + c;
	}
};

var val = new Foo();
val.dump();

printf("val.foo = %s\n", val.foo);
printf("val[\"foo\"] = %s\n", val["foo"]);
//printf("val(1337, 10) = %d\n", val(1337, 10));

val.dump();
delete val;
