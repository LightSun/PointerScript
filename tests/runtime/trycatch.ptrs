import assert, assertEq from "../common.ptrs";
var worked;

try
	throw "err";

try
{
	throw "err";
}
catch(err, trace, _, line)
{
	assertEq("err", err, trace);
	assertEq(9, line);
}

worked = false;
try
{
	try
		throw "err";
	finally
		worked = true;
}
assert(worked);

worked = false;
try
{}
finally
{
	worked = true;
}
assert(worked);

worked = false;
try
	throw "foobar";
catch(err)
	assertEq("foobar", err);
finally
	worked = true;
assert(worked);

/*
worked = false;
try
	*as<u8[4]>0;
catch()
	worked = true;
assert(worked);
*/

function tryFinallyRet()
{
	try
	{
		try
			return 111;
		finally(ret)
			return ret * 6;
	}
}
assertEq(666, tryFinallyRet());

function tryCatchFinallyRet1()
{
	try
		throw "err";
	catch()
		return 42;
	finally(ret)
		return ret;
}
function tryCatchFinallyRet2()
{
	try
		return 1337;
	catch()
		;
	finally(ret)
		return ret;
}
assertEq(42, tryCatchFinallyRet1());
assertEq(1337, tryCatchFinallyRet2());

function tryCatchFinallyNoRet1()
{
	try
		throw "err";
	catch()
		return 666;
	finally
		;
}
function tryCatchFinallyNoRet2()
{
	try
		return 3112;
	catch()
		;
	finally
		;
}
assertEq(666, tryCatchFinallyNoRet1());
assertEq(3112, tryCatchFinallyNoRet2());
