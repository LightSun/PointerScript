import assert, assertEq from "../common.ptrs";

//var allFine = true;
var val = 3;
var ptr = &val;
assertEq(type<pointer>, typeof ptr);
assertEq(3, *ptr);

*ptr = 42;
assertEq(42, val);
assertEq(42, *ptr);

ptr = new array[16];
assertEq(16, sizeof ptr);
assertEq(sizeof var, as<native>(ptr + 1) - as<native>ptr);

/*try
{
	ptr[16];
	allFine = false;
}
assert(allFine);

try
{
	ptr[-3];
	allFine = false;
}
assert(allFine);*/

assertEq(6, sizeof ptr[2 .. 8]);
assertEq(8, sizeof ptr[0 .. 8]);
assertEq(14, sizeof ptr[2 .. $]);
assertEq(16, sizeof ptr[0 .. $]);
delete ptr;

ptr = new array[] [42, "hello", 31.12];
assertEq(3, sizeof ptr);
assertEq(42, ptr[0]);
assertEq("hello", ptr[1]);
assertEq(31.12, ptr[2]);
delete ptr;

ptr = new array{} {'h', 'i', 0};
assertEq(3, sizeof ptr);
assertEq("hi", ptr);
delete ptr;

var buff{128};
buff[7] = 257;
buff[8] = -4;
assertEq(1, buff[7]);
assertEq(252, buff[8]);

var str = "hi";
assertEq(3, sizeof str);
assertEq(104 /* 'h' */, str[0]);
/*try
{
	str[1] = 'o';
	allFine = false;
}
assert(allFine);

var str2 = new array{} {'a', ...str, 'b'};
assertEq('a', str2[0]);
assertEq('h', str2[1]);
assertEq('i', str2[2]);
assertEq(0, str2[3]);
assertEq('b', str2[4]);

var vals[] = [42, 1337, 666];
var vals2 = new array[] ['a', ...vals, 'b'];
assertEq('a', vals2[0]);
assertEq(42, vals2[1]);
assertEq(1337, vals2[2]);
assertEq(666, vals2[3]);
assertEq('b', vals2[4]);

var vals3 = new array[] ["42", ..."hi", "hello"];
assertEq("42", vals3[0]);
assertEq('h', vals3[1]);
assertEq('i', vals3[2]);
assertEq(0, vals3[3]);
assertEq("hello", vals3[4]);

var str3 = new array{} {...vals3};
assertEq(42, str3[0]);
assertEq('h', str3[1]);
assertEq('i', str3[2]);
assertEq(0, str3[3]);
assertEq(0, str3[4]);*/
