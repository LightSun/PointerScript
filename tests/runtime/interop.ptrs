import atoi, atof, strcmp, qsort, puts;
import pow, sin from "libm.so.6";
import assert, assertEq from "../common.ptrs";
import str*;

var str = "hello!";
var str2{} = str;
assert(strcmp(str, str2) == 0);
assert(str != str2);

assertEq(42, atoi("42")); //should we check using strtoll instead?
assertEq(42, atoi!int("42"));
assertEq(31.12, atof!double("31.12"));

assertEq(1f, sin!double(PI / 2));
assertEq(15.625, pow!double(2.5, 3f));

var vals = new array[] [4, 0, 1, 3, 2];
qsort(vals, sizeof vals, VARSIZE, (a, b) -> *as<pointer>a - *as<pointer>b);
for(var i = 0; i < sizeof vals; i++)
	assertEq(i, vals[i]);

//wildcard tests
var buff{256};
strcpy(buff, "hello world!");
assertEq("hello world!", buff);
assertEq(0, strncmp(buff, "hello", 5));
assertEq(buff + 6, strstr!native(buff, "world"));
